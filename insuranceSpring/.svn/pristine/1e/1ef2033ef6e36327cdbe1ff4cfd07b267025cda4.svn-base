package com.dxm.insuranceSpring.controls;

import javax.annotation.Resource;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.dxm.insuranceSpring.pojo.Report;
import com.dxm.insuranceSpring.pojo.Warranty;
import com.dxm.insuranceSpring.services.IReportServices;
import com.dxm.insuranceSpring.utils.APIRequest;

@Controller
public class ReportControls {
	@Resource(name="reportServicesImpls")
	IReportServices service;
	
	@RequestMapping(value="/loadWarranty.do",produces="application/json;charset=utf-8")
	@ResponseBody
	public String loadWarranty(Warranty warranty,Integer indexPage) {
		Warranty wy=new Warranty();
		wy.setWarrantyId(1);
		wy.setDriverId("2777778");
		wy.setEngineId("111");
		wy.setRecognizeeIdCard("431222178907274451");
		APIRequest<Warranty> api=service.queryWarranty(wy,1);
		System.out.println(api.getDatas().size());
		return api.toString();
	}
	
	@RequestMapping(value="/addReport.do",produces="application/json;charset=utf-8")
	@ResponseBody
	public String addReport(Report report) {
		APIRequest api=service.addReport(report);
		return api.toString();
	}
	
	@RequestMapping(value="/loadAllReport.do",produces="application/json;charset=utf-8")
	@ResponseBody
	public String loadAllReport(Integer indexPage) {
		APIRequest api=service.queryAllReport(1);
		return api.toString();
	}
	
	@RequestMapping(value="/loadAllReportDetial.do",produces="application/json;charset=utf-8")
	@ResponseBody
	public String loadAllReportDetial(Integer reportId) {
		APIRequest api=service.queryAllReportDetils(1);
		return api.toString();
	}
	
	@RequestMapping(value="/updateReport.do",produces="application/json;charset=utf-8")
	@ResponseBody
	public String updateReport(Report report) {
		APIRequest api=service.updateReport(report);
		return api.toString();
	}
	
	@RequestMapping(value="/updateReportStatus.do",produces="application/json;charset=utf-8")
	@ResponseBody
	public String updateReportStatus(Integer reportId) {
		APIRequest api=service.updateReportStatus(reportId);
		return api.toString();
	}
	
	@RequestMapping(value="/loadHandleReport.do",produces="application/json;charset=utf-8")
	@ResponseBody
	public String loadHandleReport(Integer indexPage) {
		APIRequest<Report> api=service.queryHandleReport(1);
		System.out.println(api.getDatas().size());
		return api.toString();
	}
	
	@RequestMapping(value="/loadHandleReportDetails.do",produces="application/json;charset=utf-8")
	@ResponseBody
	public String loadHandleReportDetails(Integer reportId) {
		APIRequest<Report> api=service.queryHandleReportDetails(1);
		System.out.println(api.getDatas().size());
		return api.toString();
	}
	
	@RequestMapping(value="/loadUnHandleReport.do",produces="application/json;charset=utf-8")
	@ResponseBody
	public String loadUnHandleReport(Integer indexPage) {
		APIRequest<Report> api=service.queryUnHandleReport(1);
		System.out.println(api.getDatas().size());
		return api.toString();
	}
	
	@RequestMapping(value="/updateReportStatusById.do",produces="application/json;charset=utf-8")
	@ResponseBody
	public String updateReportStatusById(Integer reportId) {
		APIRequest api=service.updateReportStatusByReportId(reportId);
		return api.toString();
	}
}
