package com.dxm.insuranceSpring.controls;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.dxm.insuranceSpring.pojo.Check;
import com.dxm.insuranceSpring.pojo.CheckDetails;
import com.dxm.insuranceSpring.pojo.Report;
import com.dxm.insuranceSpring.services.ICheckServices;
import com.dxm.insuranceSpring.utils.APIRequest;

@Controller
@RequestMapping("src/page/check")
public class CheckControls {
	@Resource(name="checkServicesImpls")
	ICheckServices services;
	
	@RequestMapping(value="/addCheck.do",produces="application/json;charset=utf-8")
	@ResponseBody
	public String addCheck(Check check) {
		APIRequest api = services.addCheck(check);
		return api.toString();
	}
	
	@RequestMapping(value="/queryByUnCheck.do",produces="application/json;charset=utf-8")
	@ResponseBody
	public String queryByUnCheck(Report report,Integer indexPage) {
		APIRequest<Report> api =services.queryByUnCheck(report,indexPage);
		return api.toString();
	}
	
	@RequestMapping(value="/queryByUnCheckById.do",produces="application/json;charset=utf-8")
	@ResponseBody
	public String queryByUnCheckById(Integer reportId) {
		APIRequest<Report> api =services.queryByUnCheckById(reportId);
		return api.toString();
	}
	
	@RequestMapping(value="/queryByChecked.do",produces="application/json;charset=utf-8")
	@ResponseBody
	public String queryByChecked(Check check,Integer indexPage) {
		APIRequest<Check> api = services.queryByChecked(check,indexPage);
		return api.toString();
	}
	
	@RequestMapping(value="/updateReportCaseStatus.do",produces="application/json;charset=utf-8")
	@ResponseBody
	public String updateReportCaseStatus(Integer reportId) {
		APIRequest api = services.updateReportCaseStatus(reportId);
		return api.toString();
	}
	
	@RequestMapping(value="/updateCheckByParam.do",produces="application/json;charset=utf-8")
	@ResponseBody
	public String updateCheckByParam(Check check) {
		APIRequest api = services.updateCheckByParam(check);
		return api.toString();
	}
	
	@RequestMapping(value="/addCheckDetails.do",produces="application/json;charset=utf-8")
	@ResponseBody
	public String addCheckDetails(HttpServletRequest request,@RequestParam("checkId")Integer checkId,@RequestParam(value="checkRemark")String[] checkRemarks, @RequestParam(value="upload")MultipartFile... file) {
		APIRequest api = services.addCheckDetails(request,checkId,checkRemarks,file);
		return api.toString();
	}
	
	@RequestMapping(value="/queryCdByCheckId.do",produces="application/json;charset=utf-8")
	@ResponseBody
	public String queryCdByCheckId(Integer checkId) {
		APIRequest<CheckDetails> api =services.queryCdByCheckId(checkId);
		return api.toString();
	}
	
	@RequestMapping(value="/updateCheckDetails.do",produces="application/json;charset=utf-8")
	@ResponseBody
	public String updateCheckDetails(String checkRemark, Integer checkDetailsId) {
		APIRequest api = services.updateCheckDetails(checkRemark, checkDetailsId);
		return api.toString();
	}
	
}
